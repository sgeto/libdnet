#!/usr/bin/env python

import glob, os, sys
from distutils.core import setup, Extension

dumbnet_srcs = [ '@srcdir@/dumbnet.c' ]
dumbnet_incdirs = [ '@top_srcdir@/include' ]
dumbnet_libdirs = []
dumbnet_libs = []
dumbnet_extargs = []
dumbnet_extobj = []

if sys.platform == 'win32':
    dumbnet_srcs.extend(['../src/addr-util.c', '../src/addr.c', '../src/blob.c', '../src/ip-util.c', '../src/ip6.c', '../src/rand.c', '../src/err.c', '../src/strlcat.c', '../src/strlcpy.c', '../src/strsep.c', '../src/arp-win32.c', '../src/eth-win32.c', '../src/fw-pktfilter.c', '../src/intf-win32.c', '../src/ip-win32.c', '../src/route-win32.c', '../src/tun-none.c'])
    dumbnet_libs.extend([ 'iphlpapi', 'ws2_32', 'packet', 'wpcap' ])
else:
    # XXX - can't build on Cygwin+MinGW yet.
    #if sys.platform == 'cygwin':
    #    dumbnet_extargs.append('-mno-cygwin')
    dumbnet_extobj.extend(glob.glob('@top_builddir@/src/.libs/*.o'))

dumbnet = Extension('dumbnet',
                 dumbnet_srcs,
                 include_dirs=dumbnet_incdirs,
                 library_dirs=dumbnet_libdirs,
                 libraries=dumbnet_libs,
                 extra_compile_args=dumbnet_extargs,
                 extra_objects=dumbnet_extobj)

setup(name='dumbnet',
      version='@VERSION@',
      description='low-level networking library',
      author='Dug Song',
      author_email='dugsong@monkey.org',
      url='http://libdnet.sourceforge.net/',
      ext_modules = [ dumbnet ])
